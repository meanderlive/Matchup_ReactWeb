{"version":3,"file":"static/js/182.79a3f7db.chunk.js","mappings":"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","sources":["metrimoniul/component/manage-profile/basic-input.jsx","metrimoniul/component/manage-profile/bio.jsx","metrimoniul/component/manage-profile/educationAndCareer-input.jsx","metrimoniul/pagesMetrimoniul/manage-profile-eduAndCareer.jsx"],"sourcesContent":["import React from \"react\";\r\nimport toast from \"react-hot-toast\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { updateUserProfileAsync } from \"../../../dating/store/slice/profileSlice\";\r\nimport { USER_ID_LOGGEDIN } from \"../../../utils\";\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport moment from \"moment\";\r\n\r\nconst ManageProfileBasicInput = ({ userData, onUpdateProfile }) => {\r\n  const dispatch = useDispatch();\r\n  const userId = USER_ID_LOGGEDIN;\r\n\r\n  const validationSchema = Yup.object({ \r\n    // name: Yup.string().required('Name is required'),\r\n    // dob: Yup.date().required('Birthday is required'),\r\n    // iAm: Yup.string().required('Please select your gender'),\r\n    // looking: Yup.string().required('Please select the gender you are looking for'),\r\n    // marital: Yup.string().required('Marital status is required'),\r\n    // address: Yup.string().required('Address is required'),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: userData?.name || '',\r\n      dob: moment(userData?.dob).format(\"YYYY-MM-DD\") || '' ,\r\n      iAm: userData?.iAm || '' ,\r\n      looking: userData?.looking || '' ,\r\n      marital: userData?.marital || '' ,\r\n      address: userData?.address || '' ,\r\n    },\r\n    validationSchema,\r\n\r\n    onSubmit: async (values) => {\r\n      console.log('values=>>>>', values)\r\n      try {\r\n        const updatedUserData = values;\r\n        \r\n        const promise = new Promise((resolve) => setTimeout(resolve, 1000));\r\n\r\n        await toast.promise(\r\n          promise,\r\n          {\r\n            loading: 'Updating...',\r\n            success: 'Basic info successfully updated',\r\n            error: 'Failed to update basic info',\r\n          }\r\n        );\r\n        await dispatch(updateUserProfileAsync({ updatedUserData, userId }));\r\n        onUpdateProfile();\r\n      } catch (error) {\r\n        console.error(\"Error updating user profile:\", error);\r\n        toast.error(\"Failed to update basic info\");\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <section className=\"log-reg log-reg-manage-profile\">\r\n      <div className=\"container\">\r\n        <div className=\"row manage-profile-input-bg\">\r\n          <div className=\"col-lg-12 ps-lg-5\">\r\n            <div className=\"log-reg-inner  input-height-basic\">\r\n              <div className=\"main-content\">\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <h4 className=\"content-title manage-profile-input-top-title\">\r\n                    Basic info\r\n                  </h4>\r\n                  <div className=\"form-group\">\r\n                    <label>Name*</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      className={`my-form-control ${formik.touched.name && formik.errors.name ? 'error' : ''}`}\r\n                      placeholder=\"Enter Your Full Name\"\r\n                      value={formik.values.name}\r\n                      onChange={formik.handleChange}\r\n                      onBlur={formik.handleBlur}\r\n                    />\r\n                    {formik.touched.name && formik.errors.name ? (\r\n                      <div className=\"error-message\">{formik.errors.name}</div>\r\n                    ) : null}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label>Birthday*</label>\r\n                    <input\r\n                      type=\"date\"\r\n                      name=\"dob\"\r\n                      value={formik.values.dob}\r\n                      onChange={formik.handleChange}\r\n                      className={`my-form-control ${formik.touched.dob && formik.errors.dob ? 'error' : ''}`}\r\n                      onBlur={formik.handleBlur}\r\n                    />\r\n                    {formik.touched.dob && formik.errors.dob ? (\r\n                      <div className=\"error-message\">{formik.errors.dob}</div>\r\n                    ) : null}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label>I am a*</label>\r\n                    <div className=\"banner__inputlist\">\r\n                      <div className=\"s-input me-3\">\r\n                        <input\r\n                          type=\"radio\"\r\n                          name=\"iAm\"\r\n                          id=\"iAmMale\"\r\n                          value=\"Male\"\r\n                          checked={formik.values.iAm === \"Male\"}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                        />\r\n                        <label htmlFor=\"iAmMale\">Man</label>\r\n                      </div>\r\n                      <div className=\"s-input\">\r\n                        <input\r\n                          type=\"radio\"\r\n                          name=\"iAm\"\r\n                          id=\"iAmFemale\"\r\n                          value=\"Female\"\r\n                          checked={formik.values.iAm === \"Female\"}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                        />\r\n                        <label htmlFor=\"iAmFemale\">Woman</label>\r\n                      </div>\r\n                    </div>\r\n                    {formik.touched.iAm && formik.errors.iAm ? (\r\n                      <div className=\"error-message\">{formik.errors.iAm}</div>\r\n                    ) : null}\r\n                  </div>\r\n                 \r\n                  <div className=\"form-group\">\r\n                    <label>Marital Status*</label>\r\n                    <select\r\n                      name=\"marital\"\r\n                      value={formik.values.marital}\r\n                      onChange={formik.handleChange}\r\n                      onBlur={formik.handleBlur}\r\n                      className={`my-form-control ${formik.touched.marital && formik.errors.marital ? 'error' : ''}`}\r\n                    >\r\n                      <option value=\"\" label=\"Select Marital Status\" />\r\n                      <option value=\"NeverMarried\" label=\"Never Married\" />\r\n                      <option value=\"AwaitingDivorce\" label=\"Awaiting Divorce\" />\r\n                      <option value=\"Divorce\" label=\"Divorce\" />\r\n                      <option value=\"Widowed\" label=\"Widowed\" />\r\n                    </select>\r\n                    {formik.touched.marital && formik.errors.marital ? (\r\n                      <div className=\"error-message\">{formik.errors.marital}</div>\r\n                    ) : null}\r\n                  </div>\r\n                \r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"default-btn reverse\"\r\n                    // disabled={formik.isSubmitting}\r\n                  >\r\n                    <span>Update profile</span>\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ManageProfileBasicInput;\r\n","import React from \"react\";\r\nimport toast from \"react-hot-toast\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { updateUserProfileAsync } from \"../../../dating/store/slice/profileSlice\";\r\nimport { USER_ID_LOGGEDIN } from \"../../../utils\";\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nconst ManageProfileBio = ({ userData, onUpdateProfile, editMode }) => {\r\n  const dispatch = useDispatch();\r\n  const userId = USER_ID_LOGGEDIN;\r\n\r\n  const validationSchema = Yup.object({\r\n    description: Yup.string().required('Bio is required'),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      description: userData?.description || '',\r\n    },\r\n    validationSchema,\r\n    onSubmit: async (values) => {\r\n      try {\r\n        const updatedUserData = {\r\n          description: values.description,\r\n        };\r\n\r\n        const loadingToast = toast.loading('Profile is updating...');\r\n\r\n        await dispatch(updateUserProfileAsync({ updatedUserData, userId }));\r\n        onUpdateProfile();\r\n        toast.dismiss(loadingToast);\r\n        setTimeout(() => {\r\n          toast.success('Profile successfully updated');\r\n        }, 500);\r\n      } catch (error) {\r\n        console.error('Error updating profile:', error);\r\n        setTimeout(() => {\r\n          toast.error('Failed to update profile');\r\n        }, 500);\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <section className=\"log-reg log-reg-manage-profile\">\r\n      <div className=\"container\">\r\n        <div className=\"row manage-profile-input-bg\">\r\n          <div className=\"col-lg-12 ps-lg-5\">\r\n            <div className=\"log-reg-inner input-height-basic\">\r\n              <div className=\"main-content\">\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <h4 className=\"content-title manage-profile-input-top-title\">\r\n                    Bio\r\n                  </h4>\r\n\r\n                  <div className=\"form-group w-100\">\r\n                   \r\n                    <textarea\r\n                      rows=\"8\"\r\n                      type=\"text\"\r\n                      id=\"description\"\r\n                      name=\"description\"\r\n                      placeholder=\"Enter Bio\"\r\n                      value={formik.values.description}\r\n                      onChange={formik.handleChange}\r\n                      onBlur={formik.handleBlur}\r\n                      className=\"my-form-control\"\r\n                    ></textarea>\r\n                    {formik.touched.description && formik.errors.description ? (\r\n                      <div className=\"error-message\">{formik.errors.description}</div>\r\n                    ) : null}\r\n                  </div>\r\n                  <button type=\"submit\" className=\"default-btn reverse\">\r\n                    <span>Update profile</span>\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ManageProfileBio;\r\n","import React from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport toast from \"react-hot-toast\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport { updateUserProfileAsync } from \"../../../dating/store/slice/profileSlice\";\r\nimport { USER_ID_LOGGEDIN } from \"../../../utils\";\r\n\r\nconst ManageProfileEduAndCareerInput = ({ userData, onUpdateProfile }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const userId = USER_ID_LOGGEDIN;\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      occupation: userData?.occupation,\r\n      CompanyName: userData?.CompanyName,\r\n      salary: userData?.salary,\r\n      HighestQualification: userData?.HighestQualification,\r\n      education: userData?.education,\r\n      CollageName: userData?.CollageName,\r\n    },\r\n    validationSchema: Yup.object({\r\n     \r\n    }),\r\n    onSubmit: async (values) => {\r\n      try {\r\n        const updatedUserData = values;\r\n\r\n        const promise = new Promise((resolve) => setTimeout(resolve, 1000));\r\n\r\n        await toast.promise(promise, {\r\n          loading: \"Updating...\",\r\n          success: \"Contact details successfully updated\",\r\n          error: \"Failed to update contact details\",\r\n        });\r\n\r\n        await dispatch(updateUserProfileAsync({ updatedUserData, userId }));\r\n        onUpdateProfile();\r\n      } catch (error) {\r\n        console.error(\"Error updating user profile:\", error);\r\n        toast.error(\"Failed to update basic info\");\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <section className=\"log-reg \">\r\n      <div className=\"container\">\r\n        <div className=\"row manage-profile-input-bg\">\r\n          <div className=\"col-lg-12 ps-lg-5\">\r\n            <div className=\"log-reg-inner input-height-basic\">\r\n              <div className=\"main-content\">\r\n                <form onSubmit={formik.handleSubmit}>\r\n                  <h4 className=\"content-title manage-profile-input-top-title\">\r\n                    Education & Career\r\n                  </h4>\r\n\r\n                  <div className=\"form-group\">\r\n                    <label>Profession*</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"occupation\"\r\n                      className={`my-form-control ${\r\n                        formik.touched.occupation && formik.errors.occupation ? \"error\" : \"\"\r\n                      }`}\r\n                      placeholder=\"Enter Your Profession\"\r\n                      value={formik.values.occupation}\r\n                      onChange={formik.handleChange}\r\n                      onBlur={formik.handleBlur}\r\n                    />\r\n                    {formik.touched.occupation && formik.errors.occupation ? (\r\n                      <div className=\"error-message\">{formik.errors.occupation}</div>\r\n                    ) : null}\r\n                  </div>\r\n\r\n                  {/* <div className=\"form-group\">\r\n                    <label>Company Name*</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"CompanyName\"\r\n                      className={`my-form-control ${\r\n                        formik.touched.CompanyName && formik.errors.CompanyName\r\n                          ? \"error\"\r\n                          : \"\"\r\n                      }`}\r\n                      placeholder=\"Enter Your Company Name\"\r\n                      value={formik.values.CompanyName}\r\n                      onChange={formik.handleChange}\r\n                      onBlur={formik.handleBlur}\r\n                    />\r\n                    {formik.touched.CompanyName && formik.errors.CompanyName ? (\r\n                      <div className=\"error-message\">\r\n                        {formik.errors.CompanyName}\r\n                      </div>\r\n                    ) : null}\r\n                  </div> */}\r\n\r\n                  <div className=\"form-group\">\r\n                    <label>Annual Income*</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"salary\"\r\n                      className={`my-form-control ${\r\n                        formik.touched.salary &&\r\n                        formik.errors.salary\r\n                          ? \"error\"\r\n                          : \"\"\r\n                      }`}\r\n                      placeholder=\"Enter Your Annual Income\"\r\n                      value={formik.values.salary}\r\n                      onChange={formik.handleChange}\r\n                      onBlur={formik.handleBlur}\r\n                    />\r\n                    {formik.touched.salary &&\r\n                    formik.errors.salary ? (\r\n                      <div className=\"error-message\">\r\n                        {formik.errors.salary}\r\n                      </div>\r\n                    ) : null}\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <label>Highest Qualification*</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"HighestQualification\"\r\n                      className={`my-form-control ${\r\n                        formik.touched.HighestQualification &&\r\n                        formik.errors.HighestQualification\r\n                          ? \"error\"\r\n                          : \"\"\r\n                      }`}\r\n                      placeholder=\"Enter Your Highest Qualification\"\r\n                      value={formik.values.HighestQualification}\r\n                      onChange={formik.handleChange}\r\n                      onBlur={formik.handleBlur}\r\n                    />\r\n                    {formik.touched.HighestQualification &&\r\n                    formik.errors.HighestQualification ? (\r\n                      <div className=\"error-message\">\r\n                        {formik.errors.HighestQualification}\r\n                      </div>\r\n                    ) : null}\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <label>Education*</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"education\"\r\n                      className={`my-form-control ${\r\n                        formik.touched.education && formik.errors.education\r\n                          ? \"error\"\r\n                          : \"\"\r\n                      }`}\r\n                      placeholder=\"Enter Your Education\"\r\n                      value={formik.values.education}\r\n                      onChange={formik.handleChange}\r\n                      onBlur={formik.handleBlur}\r\n                    />\r\n                    {formik.touched.education && formik.errors.education ? (\r\n                      <div className=\"error-message\">\r\n                        {formik.errors.education}\r\n                      </div>\r\n                    ) : null}\r\n                  </div>\r\n\r\n                  {/* <div className=\"form-group\">\r\n                    <label>University*</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"CollageName\"\r\n                      className={`my-form-control ${\r\n                        formik.touched.CollageName && formik.errors.CollageName\r\n                          ? \"error\"\r\n                          : \"\"\r\n                      }`}\r\n                      placeholder=\"Enter Your University\"\r\n                      value={formik.values.CollageName}\r\n                      onChange={formik.handleChange}\r\n                      onBlur={formik.handleBlur}\r\n                    />\r\n                    {formik.touched.CollageName && formik.errors.CollageName ? (\r\n                      <div className=\"error-message\">\r\n                        {formik.errors.CollageName}\r\n                      </div>\r\n                    ) : null}\r\n                  </div> */}\r\n\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"default-btn reverse\"\r\n                    disabled={formik.isSubmitting}\r\n                  >\r\n                    <span>Update profile</span>\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ManageProfileEduAndCareerInput;\r\n","import { Component, Fragment, useCallback, useEffect, useState } from \"react\";\r\nimport HeaderFour from \"../../component/layout/HeaderFour\";\r\nimport FooterFour from \"../component/layout/footerFour\";\r\nimport ManageProfileBasicInput from \"../component/manage-profile/basic-input\";\r\n\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport ManageProfileLookingFor from \"../component/manage-profile/looking-for-input\";\r\nimport ManageProfileLifeStyle from \"../component/manage-profile/lifestyle-input\";\r\nimport ManageProfilePhysicalInfo from \"../component/manage-profile/physical-info\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getUserProfileAsync } from \"../../dating/store/slice/profileSlice\";\r\nimport ManageProfileBio from \"../component/manage-profile/bio\";\r\nimport ManageProfileEduAndCareerInput from \"../component/manage-profile/educationAndCareer-input\";\r\n\r\n\r\nconst ManageProfileCareerAndEducation = () => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [activeTab, setActiveTab] = useState(\"\");\r\n  const [userDDDD, setUserDDDDD] = useState();\r\n\r\n  const profileData = useSelector((state) => state.profile.userData);\r\n  console.log(\"-2323profile\",profileData)\r\n  const dispatch = useDispatch();\r\n  const userData1 = profileData[0];\r\n  const userDatas = localStorage.getItem(\"userData\");\r\n  const userDataObj = JSON.parse(userDatas);\r\n  const userId = userDataObj?.data?.data?._id || null;\r\n\r\n  const getHandle = useCallback(() => {\r\n    dispatch(getUserProfileAsync(userId));\r\n  }, [dispatch, userId]);\r\n  const updateProfileData = useCallback(async () => {\r\n    try {\r\n      dispatch(getUserProfileAsync(userId));\r\n    } catch (error) {\r\n      console.error(\"Error updating user profile in ManageProfile:\", error);\r\n    }\r\n  }, [dispatch, userId]);\r\n\r\n  useEffect(() => {\r\n    getHandle();\r\n  }, [getHandle]);\r\n\r\n  const updateUserData = (newUserData) => {\r\n    setEditMode(false);\r\n  };\r\n\r\n  const handleActiveTab = (tab) => {\r\n    setActiveTab(tab);\r\n    setEditMode(true);\r\n  };\r\n\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <Fragment>\r\n      <HeaderFour />\r\n\r\n      <div className=\"group group--single padding-top padding-bottom\">\r\n        <div className=\"group__bottom\">\r\n          <div\r\n            className=\"col-10\"\r\n            style={{\r\n              marginLeft: \"11%\",\r\n            }}\r\n          >\r\n            <Link>\r\n              <button\r\n                className=\"default-btn reverse \"\r\n                onClick={() => navigate(-1)}\r\n              >\r\n                <span>Back</span>\r\n              </button>\r\n            </Link>\r\n          </div>\r\n          <div className=\"container\">\r\n            <div className=\"row g-4\">\r\n              <div className=\"col-xl-6 order-xl-1\">\r\n              \r\n\r\n                <div className=\"group__bottom--left mb-4 group__bottom--left-manage-profile\">\r\n                  <div\r\n                    className={`info\" ${\r\n                      activeTab === \"edu&career\"\r\n                        ? \"basic-info-manage-ptofile \"\r\n                        : \"\"\r\n                    }`}\r\n                    onClick={() => {\r\n                      handleActiveTab(\"edu&career\");\r\n                      setUserDDDDD(userData1);\r\n                    }}\r\n                  >\r\n                    <div className=\"info-card\">\r\n                      <div className=\"info-card-title\">\r\n                        <h6>Education & Career</h6>\r\n                      </div>\r\n                      <div className=\"info-card-content\">\r\n                        <ul className=\"info-list\">\r\n                          <li>\r\n                            <p className=\"info-name\">Profession</p>\r\n                            <p className=\"info-details\">{userData1?.occupation}</p>\r\n                          </li>\r\n                          {/* <li>\r\n                            <p className=\"info-name\">Company Name</p>\r\n                            <p className=\"info-details\">{userData1?.CompanyName}</p>\r\n                          </li> */}\r\n                          <li>\r\n                            <p className=\"info-name\">Annual Income</p>\r\n                            <p className=\"info-details\">{userData1?.salary}</p>\r\n                          </li>\r\n                          <li>\r\n                            <p className=\"info-name\">Highest Qualification</p>\r\n                            <p className=\"info-details\">\r\n                              {userData1?.HighestQualification}\r\n                            </p>\r\n                          </li>\r\n                          <li>\r\n                            <p className=\"info-name\">Education</p>\r\n                            <p className=\"info-details\">\r\n                              {userData1?.education}\r\n                            </p>\r\n                          </li>\r\n                          {/* <li>\r\n                            <p className=\"info-name\">University</p>\r\n                            <p className=\"info-details\">\r\n                              {userData1?.CollageName}\r\n                            </p>\r\n                          </li> */}\r\n                        </ul>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-xl-6 order-xl-1\">\r\n                \r\n                <div className=\"group__bottom--right\">\r\n                  {activeTab === \"edu&career\" && (\r\n                    <ManageProfileEduAndCareerInput\r\n                      userData={userDDDD}\r\n                      updateUserData={updateUserData}\r\n                      editMode={editMode}\r\n                      getHandle={getHandle}\r\n                      onUpdateProfile={updateProfileData}\r\n                    />\r\n                  )}\r\n                </div>\r\n                \r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <FooterFour />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ManageProfileCareerAndEducation;\r\n"],"names":["_ref","userData","onUpdateProfile","dispatch","useDispatch","userId","USER_ID_LOGGEDIN","validationSchema","Yup","formik","useFormik","initialValues","name","dob","moment","format","iAm","looking","marital","address","onSubmit","async","console","log","values","updatedUserData","promise","Promise","resolve","setTimeout","toast","loading","success","error","updateUserProfileAsync","_jsx","className","children","_jsxs","handleSubmit","type","touched","errors","placeholder","value","onChange","handleChange","onBlur","handleBlur","id","checked","htmlFor","label","editMode","description","required","loadingToast","dismiss","rows","occupation","CompanyName","salary","HighestQualification","education","CollageName","disabled","isSubmitting","ManageProfileCareerAndEducation","_userDataObj$data","_userDataObj$data$dat","setEditMode","useState","activeTab","setActiveTab","userDDDD","setUserDDDDD","profileData","useSelector","state","profile","userData1","userDatas","localStorage","getItem","userDataObj","JSON","parse","data","_id","getHandle","useCallback","getUserProfileAsync","updateProfileData","useEffect","navigate","useNavigate","Fragment","HeaderFour","style","marginLeft","Link","onClick","ManageProfileEduAndCareerInput","updateUserData","newUserData","FooterFour"],"sourceRoot":""}