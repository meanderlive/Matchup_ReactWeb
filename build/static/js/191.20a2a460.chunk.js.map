{"version":3,"file":"static/js/191.20a2a460.chunk.js","mappings":"sOASA,MA2FA,EA3FuBA,KACrB,MAAOC,EAAmBC,IAAwBC,EAAAA,EAAAA,UAAS,KACpDC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,GACjCG,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAYC,EAAAA,EAAAA,IAAaC,IAAK,IAAAC,EAAAC,EAAA,OAAU,OAALF,QAAK,IAALA,GAAoB,QAAfC,EAALD,EAAOG,qBAAa,IAAAF,GAAU,QAAVC,EAApBD,EAAsBG,gBAAQ,IAAAF,OAAzB,EAALA,EAAgCG,OACnEC,GAAmBP,EAAAA,EAAAA,IAAaC,IAAK,IAAAO,EAAA,OAAU,OAALP,QAAK,IAALA,GAAoB,QAAfO,EAALP,EAAOG,qBAAa,IAAAI,OAAf,EAALA,EAAsBf,UAIhEgB,EAAW,CACfC,IAHaC,EAAAA,GAIbC,SAAUtB,IAGZuB,EAAAA,EAAAA,WAAU,KACRhB,GAASiB,EAAAA,EAAAA,IAAeC,EAAAA,KACtBrB,GAAW,IACZ,CAACG,EAAUJ,IA8Bd,OACEuB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CAAE,IAAEzB,GACF0B,EAAAA,EAAAA,KAACC,EAAAA,EAAM,KAEPJ,EAAAA,EAAAA,MAAA,OAAKK,UAAU,uCAAsCH,SAAA,EACnDF,EAAAA,EAAAA,MAAA,OAAKK,UAAU,kBAAiBH,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,MAAIE,UAAU,OAAMH,SAAC,2BACrBC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,MAAKH,SACjBnB,GAAaA,EAAUuB,IAAI,CAACV,EAAUW,KACrCJ,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAEHC,MAAO,CACLC,OAAQ,cAAapC,EAAkBqC,SAASf,EAASF,KAAO,UAAY,aAC5EkB,OAAQ,sBACRC,QAAS,WACTC,aAAc,OACdC,OAAQ,WAEVV,UAAW,8BAA6B/B,EAAkBqC,SAASf,EAASF,KAAO,WAAa,IAChGsB,QAASA,IA/COpB,KAC5B,MAAMqB,EAAmB3C,EAAkBqC,SAAiB,OAARf,QAAQ,IAARA,OAAQ,EAARA,EAAUF,KAC1DpB,EAAkB4C,OAAQC,GAASA,KAAiB,OAARvB,QAAQ,IAARA,OAAQ,EAARA,EAAUF,MACtD,IAAIpB,EAA2B,OAARsB,QAAQ,IAARA,OAAQ,EAARA,EAAUF,KAErCnB,EAAqB0C,IA0CMG,CAAqBxB,GAAUM,SAErC,OAARN,QAAQ,IAARA,OAAQ,EAARA,EAAUyB,MAXNd,UAgBbJ,EAAAA,EAAAA,KAAA,OAAKE,UAAU,aAAYH,SACxB5B,EAAkBgD,OAAS,GAC1BnB,EAAAA,EAAAA,KAAA,UAAQE,UAAU,sBAAsBW,QAhDvBO,UACzB,UACQ,IAAIC,QAASC,GAAYC,WAAWD,EAAS,YAC7CE,EAAAA,GAAMC,QACV/C,GAASgD,EAAAA,EAAAA,IAAepC,IACxB,CACEhB,QAAS,0CACTqD,SAAS3B,EAAAA,EAAAA,KAAA,KAAAD,SAAG,sCACZ6B,OAAO5B,EAAAA,EAAAA,KAAA,KAAAD,SAAG,qDAGW,IAArBX,GACFZ,EAAS,0BAEb,CACA,MAAOoD,GACLJ,EAAAA,GAAMI,MAAM,8CACd,GA+B4E7B,UAClEC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,6BAGRC,EAAAA,EAAAA,KAAA,UAAQE,UAAU,sBAAsBW,QAASA,IAAMrC,EAAS,gBAAgBuB,UAC9EC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,mB","sources":["metrimoniul/pagesMetrimoniul/select-intrests.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport toast from 'react-hot-toast';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getAllInterest } from \"../../service/MANAGE_SLICE/interest-SLICE\";\r\nimport { MODE_METRI, Mode, USER_ID_LOGGEDIN } from \"../../utils\";\r\nimport { updateUserById } from \"../../dating/store/slice/AuthSlice\";\r\nimport Lodder from \"../component/layout/Lodder\";\r\n\r\nconst SelectInterest = () => {\r\n  const [selectedInterests, setSelectedInterests] = useState([]);\r\n  const [loading, setLoading] = useState(true)\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const interests = useSelector((state) => state?.intersetSlice?.interset?.data);\r\n  const interestsLoading = useSelector((state) => state?.intersetSlice?.loading);\r\n\r\n  const userId = USER_ID_LOGGEDIN;\r\n\r\n  const userData = {\r\n    _id: userId,\r\n    interest: selectedInterests,\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllInterest(MODE_METRI));\r\n      setLoading(false)\r\n  }, [dispatch, loading]);\r\n\r\n  const handleInterestToggle = (interest) => {\r\n    const updatedInterests = selectedInterests.includes(interest?._id)\r\n      ? selectedInterests.filter((item) => item !== interest?._id)\r\n      : [...selectedInterests, interest?._id];\r\n\r\n    setSelectedInterests(updatedInterests);\r\n  };\r\n\r\n  const handleNavigateHome = async () => {\r\n    try {\r\n      await new Promise((resolve) => setTimeout(resolve, 100));\r\n      await toast.promise(\r\n        dispatch(updateUserById(userData)),\r\n        {\r\n          loading: 'Updating your interests üòç...',\r\n          success: <b>Interests updated! Redirecting...</b>,\r\n          error: <b>Could not update interests. Please try again.</b>,\r\n        }\r\n      );\r\n      if (interestsLoading !== true) {\r\n        navigate('/metrimonial/add-photos');\r\n      }\r\n    }\r\n    catch (error) {\r\n      toast.error(\"Error updating interests. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <> {loading ? (\r\n      <Lodder />\r\n    ) : (\r\n      <div className=\"container padding-top padding-bottom\">\r\n        <div className=\"row text-center\">\r\n          <h2 className=\"mb-4\">Select Your Interests</h2>\r\n          <div className=\"col\">\r\n            {interests && interests.map((interest, index) => (\r\n              <Link\r\n                key={index}\r\n                style={{\r\n                  border: `1px solid ${selectedInterests.includes(interest._id) ? \"#d63384\" : \"lightgray\"}`,\r\n                  margin: \"10px 10px 10px 10px\",\r\n                  padding: \"5px 12px\",\r\n                  borderRadius: \"25px\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n                className={`interest-item flex-nowrap ${selectedInterests.includes(interest._id) ? \"selected\" : \"\"}`}\r\n                onClick={() => handleInterestToggle(interest)}\r\n              >\r\n                {interest?.name}\r\n              </Link>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div className=\"col-4 mt-4\">\r\n          {selectedInterests.length > 0 ? (\r\n            <button className=\"default-btn reverse\" onClick={handleNavigateHome}>\r\n              <span>Submit your interests</span>\r\n            </button>\r\n          ) : (\r\n            <button className=\"default-btn reverse\" onClick={() => navigate('/metrimonial')}>\r\n              <span>Skip</span>\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SelectInterest;\r\n"],"names":["SelectInterest","selectedInterests","setSelectedInterests","useState","loading","setLoading","navigate","useNavigate","dispatch","useDispatch","interests","useSelector","state","_state$intersetSlice","_state$intersetSlice$","intersetSlice","interset","data","interestsLoading","_state$intersetSlice2","userData","_id","USER_ID_LOGGEDIN","interest","useEffect","getAllInterest","MODE_METRI","_jsxs","_Fragment","children","_jsx","Lodder","className","map","index","Link","style","border","includes","margin","padding","borderRadius","cursor","onClick","updatedInterests","filter","item","handleInterestToggle","name","length","async","Promise","resolve","setTimeout","toast","promise","updateUserById","success","error"],"sourceRoot":""}