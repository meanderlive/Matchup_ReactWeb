{"version":3,"file":"static/js/137.bcff2c46.chunk.js","mappings":"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","sources":["metrimoniul/pagesMetrimoniul/notification-page.jsx","metrimoniul/component/select/selectproduct.jsx"],"sourcesContent":["import React, { useState,useEffect } from \"react\";\r\nimport { Badge, Container, Row } from \"react-bootstrap\";\r\nimport HeaderFour from \"../component/layout/HeaderFour\";\r\nimport boy from \"../assets/images/member/male/01.jpg\";\r\nimport connectionRequestImage from \"../assets/images/member/male/02.jpg\";\r\nimport defaultImage from \"../assets/images/member/male/03.jpg\";\r\nimport SelectProduct from \"../component/select/selectproduct\";\r\nimport { deleteActivitySlice, getAllActivies, getBySenderUserIds,getActivitysByUsersId } from \"../../dating/store/slice/ActivitiesSlice\";\r\nimport { MODE_METRI } from \"../../utils\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport dummyUserPic from \"../../dating/assets/images/myCollection/user-male.jpg\"\r\nimport userPic from \"../../assets/images/member/profile/download (3).jpeg\";\r\n\r\nconst NotificationItem = ({ notification, markAsRead }) => {\r\n  const user = useSelector((state) => state.profile.userData[0])\r\n  const renderNotificationImage = () => {\r\n\r\n   \r\n\r\n    switch (notification.activityType === \"like\" ) {\r\n      case \"profile-view\":\r\n        return (\r\n          <img\r\n          src={\r\n            notification.receiverUser?.mainAvatar\r\n              ? `https://datingapi.meander.software/assets/images/${notification.receiverUser?.mainAvatar}`\r\n              : userPic\r\n          }\r\n            // src={boy}\r\n            className=\"profile-picture-notification\"\r\n            alt={`${notification.receiverUser?.name}'s profile`}\r\n          />\r\n        );\r\n      case \"connection-request\":\r\n        return (\r\n          <img\r\n            className=\"profile-picture-notification\"\r\n            src={connectionRequestImage}\r\n            alt=\"Connection Request\"\r\n          />\r\n        );\r\n      default:\r\n        return (\r\n          <img\r\n            className=\"profile-picture-notification\"\r\n            src={\r\n              notification.receiverUser?.mainAvatar\r\n                ? `https://datingapi.meander.software/assets/images/${notification.receiverUser?.mainAvatar}`\r\n                : userPic\r\n            }\r\n            // src={defaultImage}\r\n            alt=\"Default\"\r\n          />\r\n        );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`notification-item-page ${!notification.isRead ? \"unread\" : \"\"}`}\r\n      onClick={() => markAsRead(notification.id)}\r\n    >\r\n      {renderNotificationImage()}\r\n      <div className=\"notification-content-page\">\r\n        <div className=\"notification-details\">\r\n          <p\r\n            className={`notification-title ${!notification.isRead ? \"unread\" : \"\"}`}\r\n            style={{\r\n              color: \"#213366\",\r\n              fontWeight: notification.isRead ? \"400\" : \"bold\",\r\n            }}\r\n          >\r\n            You only like {notification.receiverUser?.name} profile\r\n          </p>\r\n          {notification.type === \"connection-request\" && (\r\n            <p className=\"notification-action\">\r\n              ü§ù {notification.sender} sent you a connection request\r\n            </p>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"notification-meta\">\r\n        <p className=\"notification-timestamp\">{notification.timestamp}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst NotificationFullPage = () => {\r\n  const datingId = localStorage.getItem(\"userData\");\r\n  const user_Data =JSON.parse(datingId)\r\n  const Store = useSelector((state) => state);\r\n  let notificationActivity =  useSelector((state) =>Store?.activies?.allActivity?.data  || [])\r\n  \r\n  console.log(notificationActivity,\"mmmmmmmm78923789\");\r\n  \r\n\r\n  const [notifications, setNotifications] = useState([]);\r\n  const dispatch = useDispatch();\r\n  \r\n  useEffect(() => {\r\n    dispatch(getActivitysByUsersId(\r\n      {\r\n        id:user_Data.data._id\r\n      }\r\n      ));\r\n  }, [user_Data.data._id]);\r\n\r\n  const markAsRead = (notificationId) => {\r\n    setNotifications((prevNotifications) =>\r\n      prevNotifications.map((notification) =>\r\n        notification.id === notificationId\r\n          ? { ...notification, isRead: true }\r\n          : notification\r\n      )\r\n    );\r\n  };\r\n\r\n  const unreadCount = notifications.filter((notification) => !notification.isRead).length;\r\n\r\n  return (\r\n    <>\r\n      <HeaderFour />\r\n      <Container>\r\n        <Row className=\"align-items-center\">\r\n          <div className=\"col-lg-6 col-md-6 col-sm-12\">\r\n            <h2 className=\"notification-title-page\">\r\n              Notifications <Badge bg=\"danger\">{unreadCount}</Badge>\r\n            </h2>\r\n          </div>\r\n          <div className=\"col-lg-6 col-md-6 col-sm-12\">\r\n            <div\r\n              className=\"member__info--right member__info--right-notification \"\r\n             \r\n            >\r\n              <div className=\"member__info--customselect right w-100\">\r\n                <div className=\"default-btn\">\r\n                  <span>Order By:</span>\r\n                </div>\r\n                <div className=\"banner__inputlist\">\r\n                  <SelectProduct select={\"Newest\"} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Row>\r\n        <div className=\"notification-modal-page\">\r\n          {notificationActivity.map((notification) => (\r\n            <NotificationItem\r\n              key={notification._id}\r\n              notification={notification}\r\n              markAsRead={markAsRead}\r\n            />\r\n          ))}\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NotificationFullPage;\r\n","import { Component } from \"react\";\r\n\r\nclass SelectProduct extends Component {\r\n    render() { \r\n        const {select} = this.props;\r\n        return (\r\n            <select defaultValue={select}>\r\n                <option value=\"Newest\">Recent added</option>\r\n                <option value=\"Popular\">Popular</option>\r\n                <option value=\"Old\">Old</option>\r\n                <option value=\"Recent\">Recent</option>\r\n            </select>\r\n        );\r\n    }\r\n}\r\n \r\nexport default SelectProduct;"],"names":["NotificationItem","_ref","_notification$receive6","notification","markAsRead","useSelector","state","profile","userData","_jsxs","className","isRead","onClick","id","children","renderNotificationImage","_notification$receive","_notification$receive2","_notification$receive3","_notification$receive4","_notification$receive5","activityType","_jsx","src","receiverUser","mainAvatar","userPic","alt","name","connectionRequestImage","style","color","fontWeight","type","sender","timestamp","NotificationFullPage","datingId","localStorage","getItem","user_Data","JSON","parse","Store","notificationActivity","_Store$activies","_Store$activies$allAc","activies","allActivity","data","console","log","notifications","setNotifications","useState","dispatch","useDispatch","useEffect","getActivitysByUsersId","_id","notificationId","prevNotifications","map","unreadCount","filter","length","_Fragment","HeaderFour","Container","Row","Badge","bg","SelectProduct","select","Component","render","this","props","defaultValue","value"],"sourceRoot":""}