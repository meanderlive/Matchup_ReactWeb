{"version":3,"file":"static/js/822.faba019b.chunk.js","mappings":"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","sources":["metrimoniul/component/section/googlemap.jsx","metrimoniul/pagesMetrimoniul/contact.jsx","metrimoniul/component/popUps/notification.jsx"],"sourcesContent":["import { Component } from \"react\";\r\n\r\nclass GoogleMap extends Component {\r\n    render() { \r\n        return (\r\n            <div id=\"map\">\r\n                <iframe src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d423283.4355669374!2d-118.69192993092697!3d34.02073049448939!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x80c2c75ddc27da13%3A0xe22fdf6f254608f4!2sLos%20Angeles%2C%20CA%2C%20USA!5e0!3m2!1sen!2sbd!4v1633958856057!5m2!1sen!2sbd\"></iframe>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default GoogleMap;","import React, { useState } from \"react\";\r\nimport HeaderFour from \"../component/layout/HeaderFour\";\r\nimport GoogleMap from \"../component/section/googlemap\";\r\nimport FooterFour from \"../component/layout/footerFour\";\r\nimport NotificationPage from \"../component/popUps/notification\";\r\nimport img1 from \"../../assets/images/contact/icon/01.png\";\r\nimport img2 from \"../../assets/images/contact/icon/02.png\";\r\nimport img3 from \"../../assets/images/contact/icon/03.png\";\r\nimport toast from \"react-hot-toast\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik, useFormik } from \"formik\";\r\n\r\nconst infotitle = \"Contact Info\";\r\nconst infosubtitle =\r\n  \"Let us know your opinions. Also, you can write to us if you have any questions.\";\r\nconst contacttitle = \"Feedback\";\r\nconst contactdesc =\r\n  \"Let us know your opinions. Also, you can write to us if you have any questions.\";\r\n\r\nconst infoListContent = [\r\n  {\r\n    imgUrl: img1,\r\n    imgAlt: \"Contact Info Thumb\",\r\n    title: \"Office Address\",\r\n    desc: \"Rochester, New York, United States, 14620\",\r\n  },\r\n  {\r\n    imgUrl: img2,\r\n    imgAlt: \"Contact Info Thumb\",\r\n    title: \"Phone number\",\r\n    desc: \"(+1) 455-4345455\",\r\n  },\r\n  {\r\n    imgUrl: img3,\r\n    imgAlt: \"Contact Info Thumb\",\r\n    title: \"Send Email\",\r\n    desc: \"hi@jacktexas.yahooo\",\r\n  },\r\n];\r\n\r\nconst ContactUs = () => {\r\n  const [showNotifications, setShowNotifications] = useState(false);\r\n  \r\n  // Validation schema for Formik\r\n  const validationSchema = Yup.object({\r\n    contactName: Yup.string().required(\"Name is required\"),\r\n    contactEmail: Yup.string()\r\n      .email(\"Invalid email address\")\r\n      .required(\"Email is required\"),\r\n    contactNumber: Yup.string()\r\n      .matches(/^[0-9]+$/, \"Must be only digits\")\r\n      .required(\"Mobile number is required\"),\r\n    contactSubject: Yup.string().required(\"Subject is required\"),\r\n    rating: Yup.number().min(1, \"Rating must be at least 1\").max(5, \"Rating must be at most 5\").required(\"Rating is required\"),\r\n  });\r\n\r\n  // Initial form values\r\n  const initialValues = {\r\n    contactName: \"\",\r\n    contactEmail: \"\",\r\n    contactSubject: \"\",\r\n    contactNumber: \"\",\r\n    respondMassage: \"\",\r\n    rating: 1, // Default rating\r\n  };\r\n\r\n  // Formik setup\r\n  const formik = useFormik({\r\n    initialValues: initialValues,\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values, { resetForm }) => {\r\n      console.log(values);\r\n      toast.success(\"Message sent Successfully\");\r\n      resetForm();\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <HeaderFour />\r\n      <div className=\"info-section padding-top padding-bottom\">\r\n        <div className=\"container\">\r\n          <div className=\"section__header style-2 text-center\">\r\n            <h2>{infotitle}</h2>\r\n            <p>{infosubtitle}</p>\r\n          </div>\r\n          <div className=\"section-wrapper\">\r\n            <div className=\"row justify-content-center g-4\">\r\n              {infoListContent.map((val, i) => (\r\n                <div className=\"col-lg-4 col-sm-6 col-12\" key={i}>\r\n                  <div className=\"contact-item text-center\">\r\n                    <div className=\"contact-thumb mb-4\">\r\n                      <img src={`${val.imgUrl}`} alt={`${val.imgAlt}`} />\r\n                    </div>\r\n                    <div className=\"contact-content\">\r\n                      <h6 className=\"title\">{val.title}</h6>\r\n                      <p>{val.desc}</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"contact-section bg-white\">\r\n        <div className=\"contact-top padding-top padding-bottom\">\r\n          <div className=\"container\">\r\n            <div className=\"row justify-content-center\">\r\n              <div className=\"col-12 col-lg-9\">\r\n                <div className=\"contact-form-wrapper text-center\">\r\n                  <h2>{contacttitle}</h2>\r\n                  <p className=\"mb-5\">{contactdesc}</p>\r\n                  <form\r\n                    className=\"contact-form\"\r\n                    action=\"#\"\r\n                    onSubmit={formik.handleSubmit}\r\n                  >\r\n                    <div className=\"form-group\">\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"contactName\"\r\n                        id=\"contactName\"\r\n                        value={formik.values.contactName}\r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        placeholder=\"Your Name *\"\r\n                      />\r\n                      {formik.touched.contactName &&\r\n                      formik.errors.contactName ? (\r\n                        <div\r\n                          className=\"error\"\r\n                          style={{ color: \"red\", padding: \"2px\" }}\r\n                        >\r\n                          {formik.errors.contactName}\r\n                        </div>\r\n                      ) : null}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"contactEmail\"\r\n                        id=\"contactEmail\"\r\n                        value={formik.values.contactEmail}\r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        placeholder=\"Your Email *\"\r\n                      />\r\n                      {formik.touched.contactEmail &&\r\n                      formik.errors.contactEmail ? (\r\n                        <div\r\n                          className=\"error\"\r\n                          style={{ color: \"red\", padding: \"2px\" }}\r\n                        >\r\n                          {formik.errors.contactEmail}\r\n                        </div>\r\n                      ) : null}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"contactNumber\"\r\n                        id=\"contactNumber\"\r\n                        value={formik.values.contactNumber}\r\n                        onChange={formik.handleChange}\r\n                        onKeyPress={(e) => {\r\n                          // Allow only numeric characters\r\n                          const isValidInput = /^\\d+$/.test(e.key);\r\n                          if (!isValidInput) {\r\n                            e.preventDefault();\r\n                          }\r\n                        }}\r\n                        placeholder=\"Mobile Number *\"\r\n                      />\r\n                      {formik.touched.contactNumber &&\r\n                      formik.errors.contactNumber ? (\r\n                        <div\r\n                          className=\"error\"\r\n                          style={{ color: \"red\", padding: \"2px\" }}\r\n                        >\r\n                          {formik.errors.contactNumber}\r\n                        </div>\r\n                      ) : null}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"contactSubject\"\r\n                        id=\"contactSubject\"\r\n                        value={formik.values.contactSubject}\r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        placeholder=\"Your Subject *\"\r\n                      />\r\n                      {formik.touched.contactSubject &&\r\n                      formik.errors.contactSubject ? (\r\n                        <div\r\n                          className=\"error\"\r\n                          style={{ color: \"red\", padding: \"2px\" }}\r\n                        >\r\n                          {formik.errors.contactSubject}\r\n                        </div>\r\n                      ) : null}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"rating\">Rating (1-5):</label>\r\n                      <input\r\n                        type=\"number\"\r\n                        name=\"rating\"\r\n                        id=\"rating\"\r\n                        min=\"1\"\r\n                        max=\"5\"\r\n                        value={formik.values.rating}\r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        placeholder=\"Rating *\"\r\n                      />\r\n                      {formik.touched.rating && formik.errors.rating ? (\r\n                        <div\r\n                          className=\"error\"\r\n                          style={{ color: \"red\", padding: \"2px\" }}\r\n                        >\r\n                          {formik.errors.rating}\r\n                        </div>\r\n                      ) : null}\r\n                    </div>\r\n                    <div className=\"form-group w-100\">\r\n                      <textarea\r\n                        rows=\"8\"\r\n                        id=\"respondMassage\"\r\n                        name=\"respondMassage\"\r\n                        value={formik.values.respondMassage}\r\n                        onChange={formik.handleChange}\r\n                        placeholder=\"Your Message\"\r\n                      ></textarea>\r\n                    </div>\r\n                    <div className=\"form-group w-100 text-center\">\r\n                      <button className=\"default-btn reverse\" type=\"submit\">\r\n                        <span>Send our Message</span>\r\n                      </button>\r\n                    </div>\r\n                  </form>\r\n                  <p className=\"form-message\"></p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"contact-bottom\">\r\n          <div className=\"contac-bottom\">\r\n            <div className=\"row justify-content-center g-0\">\r\n              <div className=\"col-12\">\r\n                <div className=\"location-map\">\r\n                  <GoogleMap />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {showNotifications && <NotificationPage />}\r\n      <FooterFour />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactUs;\r\n","\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Toaster, toast } from 'react-hot-toast';\r\n\r\nconst NotificationPage = () => {\r\n  const [notifications, setNotifications] = useState([]);\r\n\r\n  const notificationsData = [\r\n    {\r\n       \"id\": 1,\r\n       \"type\": \"match\",\r\n       \"message\": \"Congratulations! You have a new match. Click to view their profile.\",\r\n       \"timestamp\": \"2023-11-15T10:30:00Z\"\r\n     },\r\n     {\r\n       \"id\": 2,\r\n       \"type\": \"message\",\r\n       \"message\": \"You've received a new message from John. Click to read.\",\r\n       \"timestamp\": \"2023-11-14T18:45:00Z\"\r\n     },\r\n     {\r\n       \"id\": 3,\r\n       \"type\": \"interest\",\r\n       \"message\": \"Someone has expressed interest in your profile. Check it out.\",\r\n       \"timestamp\": \"2023-11-13T12:15:00Z\"\r\n     },\r\n     {\r\n       \"id\": 4,\r\n       \"type\": \"reminder\",\r\n       \"message\": \"Don't forget to update your profile picture for better visibility!\",\r\n       \"timestamp\": \"2023-11-12T09:00:00Z\"\r\n     },\r\n     {\r\n       \"id\": 5,\r\n       \"type\": \"match\",\r\n       \"message\": \"Great news! Another match found for you. Click to see who it is.\",\r\n       \"timestamp\": \"2023-11-11T15:30:00Z\"\r\n     },\r\n     {\r\n       \"id\": 6,\r\n       \"type\": \"message\",\r\n       \"message\": \"You've got a new message from Emily. Check it out now!\",\r\n       \"timestamp\": \"2023-11-10T21:20:00Z\"\r\n     },\r\n     {\r\n       \"id\": 7,\r\n       \"type\": \"interest\",\r\n       \"message\": \"Someone is interested in getting to know you better. Respond to their interest.\",\r\n       \"timestamp\": \"2023-11-09T08:45:00Z\"\r\n     },\r\n     {\r\n       \"id\": 8,\r\n       \"type\": \"reminder\",\r\n       \"message\": \"Complete your profile by adding more details. Profiles with more information get more attention!\",\r\n       \"timestamp\": \"2023-11-08T14:10:00Z\"\r\n     },\r\n     {\r\n       \"id\": 9,\r\n       \"type\": \"match\",\r\n       \"message\": \"Exciting news! You and Alex are a perfect match. Click to connect.\",\r\n       \"timestamp\": \"2023-11-07T11:55:00Z\"\r\n     },\r\n     {\r\n       \"id\": 10,\r\n       \"type\": \"message\",\r\n       \"message\": \"A new message is waiting for you. Open now to read.\",\r\n       \"timestamp\": \"2023-11-06T17:30:00Z\"\r\n     }\r\n ];\r\n\r\n useEffect(() => {\r\n    setNotifications(notificationsData);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const notificationLoop = setInterval(() => {\r\n      notifications.forEach((notification, index) => {\r\n        setTimeout(() => {\r\n          toast(notification.message, { duration: 5000 });\r\n        }, index * 10000);\r\n      });\r\n    }, (notifications.length + 1) * 1000);\r\n\r\n    return () => clearInterval(notificationLoop);\r\n  }, [notifications]);\r\n\r\n  return (\r\n    <div>\r\n      {/* <Toaster position=\"bottom-right\" /> */}\r\n      <style>{`\r\n        @media (max-width: 768px) {\r\n          .Toastify__toast-container {\r\n            top: 0;\r\n            bottom: auto;\r\n          }\r\n        }\r\n      `}</style>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default NotificationPage;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import { Toaster, toast } from 'react-hot-toast';\r\n\r\n// const NotificationPage = () => {\r\n//   const [notifications, setNotifications] = useState([]);\r\n\r\n//   const notificationsData = [\r\n//          {\r\n//             \"id\": 1,\r\n//             \"type\": \"match\",\r\n//             \"message\": \"Congratulations! You have a new match. Click to view their profile.\",\r\n//             \"timestamp\": \"2023-11-15T10:30:00Z\"\r\n//           },\r\n//           {\r\n//             \"id\": 2,\r\n//             \"type\": \"message\",\r\n//             \"message\": \"You've received a new message from John. Click to read.\",\r\n//             \"timestamp\": \"2023-11-14T18:45:00Z\"\r\n//           },\r\n//           {\r\n//             \"id\": 3,\r\n//             \"type\": \"interest\",\r\n//             \"message\": \"Someone has expressed interest in your profile. Check it out.\",\r\n//             \"timestamp\": \"2023-11-13T12:15:00Z\"\r\n//           },\r\n//           {\r\n//             \"id\": 4,\r\n//             \"type\": \"reminder\",\r\n//             \"message\": \"Don't forget to update your profile picture for better visibility!\",\r\n//             \"timestamp\": \"2023-11-12T09:00:00Z\"\r\n//           },\r\n//           {\r\n//             \"id\": 5,\r\n//             \"type\": \"match\",\r\n//             \"message\": \"Great news! Another match found for you. Click to see who it is.\",\r\n//             \"timestamp\": \"2023-11-11T15:30:00Z\"\r\n//           },\r\n//           {\r\n//             \"id\": 6,\r\n//             \"type\": \"message\",\r\n//             \"message\": \"You've got a new message from Emily. Check it out now!\",\r\n//             \"timestamp\": \"2023-11-10T21:20:00Z\"\r\n//           },\r\n//           {\r\n//             \"id\": 7,\r\n//             \"type\": \"interest\",\r\n//             \"message\": \"Someone is interested in getting to know you better. Respond to their interest.\",\r\n//             \"timestamp\": \"2023-11-09T08:45:00Z\"\r\n//           },\r\n//           {\r\n//             \"id\": 8,\r\n//             \"type\": \"reminder\",\r\n//             \"message\": \"Complete your profile by adding more details. Profiles with more information get more attention!\",\r\n//             \"timestamp\": \"2023-11-08T14:10:00Z\"\r\n//           },\r\n//           {\r\n//             \"id\": 9,\r\n//             \"type\": \"match\",\r\n//             \"message\": \"Exciting news! You and Alex are a perfect match. Click to connect.\",\r\n//             \"timestamp\": \"2023-11-07T11:55:00Z\"\r\n//           },\r\n//           {\r\n//             \"id\": 10,\r\n//             \"type\": \"message\",\r\n//             \"message\": \"A new message is waiting for you. Open now to read.\",\r\n//             \"timestamp\": \"2023-11-06T17:30:00Z\"\r\n//           }\r\n//       ];\r\n\r\n//   useEffect(() => {\r\n//     setNotifications(notificationsData);\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     const notificationLoop = setInterval(() => {\r\n//       notifications.forEach((notification, index) => {\r\n//         setTimeout(() => {\r\n//           if (notification.type === 'message') {\r\n//             // Custom toast for messages\r\n//             // toast.custom((t) => (\r\n//             //   <div\r\n//             //     className={`${\r\n//             //       t.visible ? 'animate-enter' : 'animate-leave'\r\n//             //     } max-w-md w-full bg-white shadow-lg rounded-lg pointer-events-auto flex ring-1 ring-black ring-opacity-5`}\r\n//             //   >\r\n//             //     <div className=\"flex-1 w-0 p-4\">\r\n//             //       <div className=\"flex items-start\">\r\n//             //         <div className=\"flex-shrink-0 pt-0.5\">\r\n//             //           <img\r\n//             //             className=\"h-10 w-10 rounded-full\"\r\n//             //             src=\"https://images.unsplash.com/photo-1494790108377-be9c29b29330?ixlib=rb-1.2.1&ixqx=6GHAjsWpt9&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2.2&w=160&h=160&q=80\"\r\n//             //             alt=\"\"\r\n//             //           />\r\n//             //         </div>\r\n//             //         <div className=\"ml-3 flex-1\">\r\n//             //           <p className=\"text-sm font-medium text-gray-900\">\r\n//             //             Emilia Gates\r\n//             //           </p>\r\n//             //           <p className=\"mt-1 text-sm text-gray-500\">\r\n//             //             Sure! 8:30pm works great!\r\n//             //           </p>\r\n//             //         </div>\r\n//             //       </div>\r\n//             //     </div>\r\n                \r\n//             //   </div>\r\n//             // ))\r\n//             if (notification.type === 'message'){\r\n//               toast(notification.message,\r\n//                  <img\r\n//                         className=\"h-10 w-10 rounded-full\"\r\n//                         src=\"https://images.unsplash.com/photo-1494790108377-be9c29b29330?ixlib=rb-1.2.1&ixqx=6GHAjsWpt9&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2.2&w=160&h=160&q=80\"\r\n//                         alt=\"\"\r\n//                       />\r\n//                 { duration: 5000 }); \r\n//             }\r\n//           } else {\r\n//             // Default toast for other types\r\n//             toast(notification.message, { duration: 5000 });\r\n//           }\r\n//         }, index * 1000);\r\n//       });\r\n//     }, (notifications.length + 1) * 1000);\r\n\r\n//     return () => clearInterval(notificationLoop);\r\n//   }, [notifications]);\r\n\r\n//   return (\r\n//     <div>\r\n//       <Toaster position=\"top-right\" />\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default NotificationPage;\r\n"],"names":["GoogleMap","Component","render","_jsx","id","children","src","infoListContent","imgUrl","img1","imgAlt","title","desc","img2","img3","ContactUs","showNotifications","setShowNotifications","useState","validationSchema","Yup","contactName","required","contactEmail","email","contactNumber","matches","contactSubject","rating","min","max","formik","useFormik","initialValues","respondMassage","onSubmit","values","_ref","resetForm","console","log","toast","success","_jsxs","_Fragment","HeaderFour","className","map","val","i","alt","action","handleSubmit","type","name","value","onChange","handleChange","onBlur","handleBlur","placeholder","touched","errors","style","color","padding","onKeyPress","e","test","key","preventDefault","htmlFor","rows","NotificationPage","FooterFour","notifications","setNotifications","notificationsData","useEffect","notificationLoop","setInterval","forEach","notification","index","setTimeout","message","duration","length","clearInterval"],"sourceRoot":""}